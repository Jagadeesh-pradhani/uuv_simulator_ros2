#!/usr/bin/env python3
import os
import sys
import argparse
from rospkg import RosPack

# In ROS2, roslib.load_manifest is not needed.
ROSPACK_INST = RosPack()

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="Create new ament package for a UUV robot description")
    parser.add_argument('--robot_name', type=str, required=True)
    args = parser.parse_args(sys.argv[1:])

    package_name = args.robot_name + '_description'
    print('Create new ament package for a UUV robot description')
    print(f'\tRobot name = {args.robot_name}')
    print(f'\tPackage name = {package_name}')

    if os.path.exists(package_name):
        print('Package already exists!')
        sys.exit(1)
    print('Creating the package...')
    # Use the ROS2 package creation command with ament_cmake as the build type.
    os.system('ros2 pkg create ' + package_name + ' --build-type ament_cmake')
    if not os.path.isdir(package_name):
        print('Package could not be created')
        sys.exit(-1)
    print('Done!')

    template_path = os.path.join(ROSPACK_INST.get_path('uuv_assistants'),
                                 'templates', 'robot_model')
    for d in os.listdir(template_path):
        new_folder = os.path.join(package_name, d)
        os.makedirs(new_folder, exist_ok=True)
        print('Creating folder=' + new_folder)
        for f in os.listdir(os.path.join(template_path, d)):
            print('Creating file:')
            filename = os.path.join(package_name, d, f.replace('.template', ''))
            print('\t' + filename)
            with open(os.path.join(template_path, d, f), 'r') as d_file:
                content = d_file.read()
            content = content.replace('$ROBOT_NAME', args.robot_name)\
                             .replace('$CATKIN_PACKAGE', package_name)
            with open(filename, 'w') as output_file:
                output_file.write(content)

    print(f'Robot description package <{package_name}> created successfully')
